{"ast":null,"code":"import _slicedToArray from\"D:\\\\react-second\\\\Todos\\\\todos\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from\"react\";import DoneBtn from\"./DoneBtn\";import TaskItem from\"./TaskItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Task=function Task(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var _useState3=useState(props.task),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var category=props.category===\"complited\"?\"complited\":null;var handleDblClick=function handleDblClick(){setEditMode(true);};var handleOnchange=function handleOnchange(e){setValue(e.target.value);};var saveChangedTask=function saveChangedTask(){setEditMode(false);if(value===\"\"){props.deleteTask();}else{props.changeTask(value);}};var handleOnBlur=function handleOnBlur(){saveChangedTask();};var handleOnKeyPress=function handleOnKeyPress(e){saveChangedTask();};if(editMode){return/*#__PURE__*/_jsx(\"input\",{className:\"changingInput\",autoFocus:true,onBlur:handleOnBlur,onKeyPress:handleOnKeyPress,value:value,onChange:handleOnchange});}return/*#__PURE__*/_jsxs(\"div\",{className:\"task\",children:[/*#__PURE__*/_jsx(DoneBtn,{completeTask:props.completeTask,category:category}),/*#__PURE__*/_jsx(TaskItem,{category:category,task:props.task,deleteTask:props.deleteTask,onDoubleClick:handleDblClick})]});};export default Task;","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/Components/Task.jsx"],"names":["React","useState","DoneBtn","TaskItem","Task","props","editMode","setEditMode","task","value","setValue","category","handleDblClick","handleOnchange","e","target","saveChangedTask","deleteTask","changeTask","handleOnBlur","handleOnKeyPress","completeTask"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,cAAgCJ,QAAQ,CAAC,KAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAA0BN,QAAQ,CAACI,KAAK,CAACG,IAAP,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAGN,KAAK,CAACM,QAAN,GAAmB,WAAnB,CAAiC,WAAjC,CAA+C,IAAhE,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BL,WAAW,CAAC,IAAD,CAAX,CACD,CAFD,CAIA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR,CACD,CAFD,CAIA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BT,WAAW,CAAC,KAAD,CAAX,CACA,GAAIE,KAAK,GAAK,EAAd,CAAkB,CAChBJ,KAAK,CAACY,UAAN,GACD,CAFD,IAEO,CACLZ,KAAK,CAACa,UAAN,CAAiBT,KAAjB,EACD,CACF,CAPD,CAQA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBH,eAAe,GAChB,CAFD,CAIA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACN,CAAD,CAAO,CAC9BE,eAAe,GAChB,CAFD,CAIA,GAAIV,QAAJ,CAAc,CACZ,mBACE,cACE,SAAS,CAAC,eADZ,CAEE,SAAS,CAAE,IAFb,CAGE,MAAM,CAAEa,YAHV,CAIE,UAAU,CAAEC,gBAJd,CAKE,KAAK,CAAEX,KALT,CAME,QAAQ,CAAEI,cANZ,EADF,CAUD,CACD,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,OAAD,EAAS,YAAY,CAAER,KAAK,CAACgB,YAA7B,CAA2C,QAAQ,CAAEV,QAArD,EADF,cAEE,KAAC,QAAD,EACE,QAAQ,CAAEA,QADZ,CAEE,IAAI,CAAEN,KAAK,CAACG,IAFd,CAGE,UAAU,CAAEH,KAAK,CAACY,UAHpB,CAIE,aAAa,CAAEL,cAJjB,EAFF,GADF,CAWD,CArDD,CAuDA,cAAeR,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport DoneBtn from \"./DoneBtn\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst Task = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [value, setValue] = useState(props.task);\r\n\r\n  const category = props.category === \"complited\" ? \"complited\" : null;\r\n\r\n  const handleDblClick = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleOnchange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const saveChangedTask = () => {\r\n    setEditMode(false);\r\n    if (value === \"\") {\r\n      props.deleteTask();\r\n    } else {\r\n      props.changeTask(value);\r\n    }\r\n  };\r\n  const handleOnBlur = () => {\r\n    saveChangedTask()\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    saveChangedTask()\r\n  };\r\n\r\n  if (editMode) {\r\n    return (\r\n      <input\r\n        className=\"changingInput\"\r\n        autoFocus={true}\r\n        onBlur={handleOnBlur}\r\n        onKeyPress={handleOnKeyPress}\r\n        value={value}\r\n        onChange={handleOnchange}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"task\">\r\n      <DoneBtn completeTask={props.completeTask} category={category} />\r\n      <TaskItem\r\n        category={category}\r\n        task={props.task}\r\n        deleteTask={props.deleteTask}\r\n        onDoubleClick={handleDblClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}