{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-second\\\\Todos\\\\todos\\\\src\\\\Components\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DoneBtn from \"./DoneBtn\";\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [value, setValue] = useState(props.task);\n  const category = props.category === \"complited\" ? \"complited\" : null;\n\n  const handleDblClick = () => {\n    setEditMode(true);\n  };\n\n  const handleOnchange = e => {\n    setValue(e.target.value);\n  };\n\n  const saveChangedTask = () => {\n    setEditMode(false);\n\n    if (value === \"\") {\n      props.deleteTask();\n    } else {\n      props.changeTask(value);\n    }\n  };\n\n  const handleOnBlur = () => {\n    saveChangedTask();\n  };\n\n  const handleOnKeyPress = e => {\n    saveChangedTask();\n  };\n\n  if (editMode) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"changingInput\",\n      autoFocus: true,\n      onBlur: handleOnBlur,\n      onKeyPress: handleOnKeyPress,\n      value: value,\n      onChange: handleOnchange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(DoneBtn, {\n      completeTask: props.completeTask,\n      category: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskItem, {\n      category: category,\n      task: props.task,\n      deleteTask: props.deleteTask,\n      onDoubleClick: handleDblClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"fBjoGT+tqP81XK/klDLR7hvYTz8=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/Components/Task.jsx"],"names":["React","useState","DoneBtn","TaskItem","Task","props","editMode","setEditMode","value","setValue","task","category","handleDblClick","handleOnchange","e","target","saveChangedTask","deleteTask","changeTask","handleOnBlur","handleOnKeyPress","completeTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,KAAK,CAACK,IAAP,CAAlC;AAEA,QAAMC,QAAQ,GAAGN,KAAK,CAACM,QAAN,KAAmB,WAAnB,GAAiC,WAAjC,GAA+C,IAAhE;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3BL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAC5BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMQ,eAAe,GAAG,MAAM;AAC5BT,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAIC,KAAK,KAAK,EAAd,EAAkB;AAChBH,MAAAA,KAAK,CAACY,UAAN;AACD,KAFD,MAEO;AACLZ,MAAAA,KAAK,CAACa,UAAN,CAAiBV,KAAjB;AACD;AACF,GAPD;;AAQA,QAAMW,YAAY,GAAG,MAAM;AACzBH,IAAAA,eAAe;AAChB,GAFD;;AAIA,QAAMI,gBAAgB,GAAIN,CAAD,IAAO;AAC9BE,IAAAA,eAAe;AAChB,GAFD;;AAIA,MAAIV,QAAJ,EAAc;AACZ,wBACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,SAAS,EAAE,IAFb;AAGE,MAAA,MAAM,EAAEa,YAHV;AAIE,MAAA,UAAU,EAAEC,gBAJd;AAKE,MAAA,KAAK,EAAEZ,KALT;AAME,MAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAER,KAAK,CAACgB,YAA7B;AAA2C,MAAA,QAAQ,EAAEV;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEA,QADZ;AAEE,MAAA,IAAI,EAAEN,KAAK,CAACK,IAFd;AAGE,MAAA,UAAU,EAAEL,KAAK,CAACY,UAHpB;AAIE,MAAA,aAAa,EAAEL;AAJjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArDD;;GAAMR,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport DoneBtn from \"./DoneBtn\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst Task = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [value, setValue] = useState(props.task);\r\n\r\n  const category = props.category === \"complited\" ? \"complited\" : null;\r\n\r\n  const handleDblClick = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleOnchange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const saveChangedTask = () => {\r\n    setEditMode(false);\r\n    if (value === \"\") {\r\n      props.deleteTask();\r\n    } else {\r\n      props.changeTask(value);\r\n    }\r\n  };\r\n  const handleOnBlur = () => {\r\n    saveChangedTask()\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    saveChangedTask()\r\n  };\r\n\r\n  if (editMode) {\r\n    return (\r\n      <input\r\n        className=\"changingInput\"\r\n        autoFocus={true}\r\n        onBlur={handleOnBlur}\r\n        onKeyPress={handleOnKeyPress}\r\n        value={value}\r\n        onChange={handleOnchange}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"task\">\r\n      <DoneBtn completeTask={props.completeTask} category={category} />\r\n      <TaskItem\r\n        category={category}\r\n        task={props.task}\r\n        deleteTask={props.deleteTask}\r\n        onDoubleClick={handleDblClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}