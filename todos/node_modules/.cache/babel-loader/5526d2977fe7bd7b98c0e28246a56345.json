{"ast":null,"code":"export default class Api {\n  static getTasks() {\n    return JSON.parse(localStorage.getItem(\"tasks\") || \"[]\");\n  }\n\n  static setTasks(taskToSet) {\n    const tasks = Api.getTasks();\n    const task = {\n      id: Math.floor(Math.random() * 10000),\n      task: taskToSet,\n      category: \"active\"\n    };\n    tasks.push(task);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  static changeTask(id, elemToChange, value) {\n    const tasks = Api.getTasks();\n    let existing = tasks.find(task => task.id == id);\n\n    if (elemToChange === \"category\") {\n      existing.category = existing.category === \"active\" ? \"complited\" : \"active\";\n    } else {\n      existing.task = value;\n    }\n\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  static changeCategory(category) {\n    const tasks = Api.getTasks();\n    tasks.forEach(task => task.category = category);\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  static deleteTask(id) {\n    const tasks = Api.getTasks();\n    const newTasks = id ? tasks.filter(task => task.id != id) : tasks.filter(task => task.category !== \"complited\");\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n  }\n\n}","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/Api.js"],"names":["Api","getTasks","JSON","parse","localStorage","getItem","setTasks","taskToSet","tasks","task","id","Math","floor","random","category","push","setItem","stringify","changeTask","elemToChange","value","existing","find","changeCategory","forEach","deleteTask","newTasks","filter"],"mappings":"AAAA,eAAe,MAAMA,GAAN,CAAU;AACR,SAARC,QAAQ,GAAG;AAChB,WAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAP;AACD;;AACc,SAARC,QAAQ,CAACC,SAAD,EAAY;AACzB,UAAMC,KAAK,GAAGR,GAAG,CAACC,QAAJ,EAAd;AAEA,UAAMQ,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXJ,MAAAA,IAAI,EAAEF,SAFK;AAGXO,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKAN,IAAAA,KAAK,CAACO,IAAN,CAAWN,IAAX;AAEAL,IAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAACe,SAAL,CAAeT,KAAf,CAA9B;AACD;;AAEgB,SAAVU,UAAU,CAACR,EAAD,EAAKS,YAAL,EAAmBC,KAAnB,EAA0B;AACzC,UAAMZ,KAAK,GAAGR,GAAG,CAACC,QAAJ,EAAd;AACA,QAAIoB,QAAQ,GAAGb,KAAK,CAACc,IAAN,CAAYb,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWA,EAAhC,CAAf;;AAEA,QAAIS,YAAY,KAAK,UAArB,EAAiC;AAC/BE,MAAAA,QAAQ,CAACP,QAAT,GACEO,QAAQ,CAACP,QAAT,KAAsB,QAAtB,GAAiC,WAAjC,GAA+C,QADjD;AAED,KAHD,MAGO;AACLO,MAAAA,QAAQ,CAACZ,IAAT,GAAgBW,KAAhB;AACD;;AAEDhB,IAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAACe,SAAL,CAAeT,KAAf,CAA9B;AACD;;AAEoB,SAAde,cAAc,CAACT,QAAD,EAAW;AAC9B,UAAMN,KAAK,GAAGR,GAAG,CAACC,QAAJ,EAAd;AACAO,IAAAA,KAAK,CAACgB,OAAN,CAAcf,IAAI,IAAIA,IAAI,CAACK,QAAL,GAAgBA,QAAtC;AACAV,IAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAACe,SAAL,CAAeT,KAAf,CAA9B;AACD;;AAEgB,SAAViB,UAAU,CAACf,EAAD,EAAK;AACpB,UAAMF,KAAK,GAAGR,GAAG,CAACC,QAAJ,EAAd;AAEA,UAAMyB,QAAQ,GAAGhB,EAAE,GACfF,KAAK,CAACmB,MAAN,CAAclB,IAAD,IAAUA,IAAI,CAACC,EAAL,IAAWA,EAAlC,CADe,GAEfF,KAAK,CAACmB,MAAN,CAAclB,IAAD,IAAUA,IAAI,CAACK,QAAL,KAAkB,WAAzC,CAFJ;AAIAV,IAAAA,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAACe,SAAL,CAAeS,QAAf,CAA9B;AACD;;AA7CsB","sourcesContent":["export default class Api {\r\n  static getTasks() {\r\n    return JSON.parse(localStorage.getItem(\"tasks\") || \"[]\");\r\n  }\r\n  static setTasks(taskToSet) {\r\n    const tasks = Api.getTasks();\r\n\r\n    const task = {\r\n      id: Math.floor(Math.random() * 10000),\r\n      task: taskToSet,\r\n      category: \"active\",\r\n    };\r\n    tasks.push(task);\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n\r\n  static changeTask(id, elemToChange, value) {\r\n    const tasks = Api.getTasks();\r\n    let existing = tasks.find((task) => task.id == id);\r\n\r\n    if (elemToChange === \"category\") {\r\n      existing.category =\r\n        existing.category === \"active\" ? \"complited\" : \"active\";\r\n    } else {\r\n      existing.task = value;\r\n    }\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n\r\n  static changeCategory(category) {\r\n    const tasks = Api.getTasks();\r\n    tasks.forEach(task => task.category = category);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n\r\n  static deleteTask(id) {\r\n    const tasks = Api.getTasks();\r\n\r\n    const newTasks = id\r\n      ? tasks.filter((task) => task.id != id)\r\n      : tasks.filter((task) => task.category !== \"complited\");\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}