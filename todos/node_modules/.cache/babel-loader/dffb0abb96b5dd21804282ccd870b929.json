{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-second\\\\Todos\\\\todos\\\\src\\\\Components\\\\TaskInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskInput = _ref => {\n  _s();\n\n  let {\n    addTask,\n    tasks,\n    toggleTaskCategory\n  } = _ref;\n  const isCompleted = tasks.every(task => task.category === \"complited\");\n  const [value, setValue] = useState(\"\");\n  const [completedTasks, setCompletedTasks] = useState(isCompleted);\n  useEffect(() => {\n    setCompletedTasks(isCompleted);\n  }, tasks);\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleOnKeyPress = e => {\n    if (e.key == \"Enter\") {\n      addTask(value);\n      setValue(\"\");\n    }\n  };\n\n  const handleOnClick = () => {\n    const category = completedTasks ? \"active\" : \"complited\";\n    toggleTaskCategory(category);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputTask\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      onClick: handleOnClick,\n      icon: faCheck,\n      className: `icon ${completedTasks ? \"iconActive\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: value,\n      onChange: handleOnChange,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskInput, \"3SObC/NymfXJp0xMIUgZDeaXSO8=\");\n\n_c = TaskInput;\nexport default TaskInput;\n\nconst Input = _ref2 => {\n  let {\n    value,\n    onChange,\n    onKeyPress\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    placeholder: \"What needs to be done?\",\n    value: value,\n    onChange: onChange,\n    onKeyPress: onKeyPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskInput\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/Components/TaskInput.jsx"],"names":["React","useEffect","useState","FontAwesomeIcon","faCheck","TaskInput","addTask","tasks","toggleTaskCategory","isCompleted","every","task","category","value","setValue","completedTasks","setCompletedTasks","handleOnChange","e","target","handleOnKeyPress","key","handleOnClick","Input","onChange","onKeyPress"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;;AAEA,MAAMC,SAAS,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAA2C;AAC5D,QAAMC,WAAW,GAAGF,KAAK,CAACG,KAAN,CAAaC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,WAAxC,CAApB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAACO,WAAD,CAApD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,iBAAiB,CAACP,WAAD,CAAjB;AACD,GAFQ,EAENF,KAFM,CAAT;;AAIA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC5BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMO,gBAAgB,GAAIF,CAAD,IAAO;AAC9B,QAAIA,CAAC,CAACG,GAAF,IAAS,OAAb,EAAsB;AACpBf,MAAAA,OAAO,CAACO,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,UAAMV,QAAQ,GAAGG,cAAc,GAAG,QAAH,GAAc,WAA7C;AACAP,IAAAA,kBAAkB,CAACI,QAAD,CAAlB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,OAAO,EAAEU,aADX;AAEE,MAAA,IAAI,EAAElB,OAFR;AAGE,MAAA,SAAS,EAAG,QAAOW,cAAc,GAAG,YAAH,GAAkB,EAAG;AAHxD;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAEI,cAFZ;AAGE,MAAA,UAAU,EAAEG;AAHd;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxCD;;GAAMf,S;;KAAAA,S;AA0CN,eAAeA,SAAf;;AAEA,MAAMkB,KAAK,GAAG,SAAqC;AAAA,MAApC;AAAEV,IAAAA,KAAF;AAASW,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAoC;AACjD,sBACE;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,QAAQ,EAAEW,QAHZ;AAIE,IAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;MAAMF,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TaskInput = ({ addTask, tasks, toggleTaskCategory }) => {\r\n  const isCompleted = tasks.every((task) => task.category === \"complited\");\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const [completedTasks, setCompletedTasks] = useState(isCompleted);\r\n\r\n  useEffect(() => {\r\n    setCompletedTasks(isCompleted);\r\n  }, tasks);\r\n\r\n  const handleOnChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    if (e.key == \"Enter\") {\r\n      addTask(value);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleOnClick = () => {\r\n    const category = completedTasks ? \"active\" : \"complited\";\r\n    toggleTaskCategory(category);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputTask\">\r\n      <FontAwesomeIcon\r\n        onClick={handleOnClick}\r\n        icon={faCheck}\r\n        className={`icon ${completedTasks ? \"iconActive\" : \"\"}`}\r\n      />\r\n      <Input\r\n        value={value}\r\n        onChange={handleOnChange}\r\n        onKeyPress={handleOnKeyPress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n\r\nconst Input = ({ value, onChange, onKeyPress }) => {\r\n  return (\r\n    <input\r\n      placeholder=\"What needs to be done?\"\r\n      value={value}\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}