{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-second\\\\Todos\\\\todos\\\\src\\\\Components\\\\TaskInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskInput = props => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n\n  const handleOnChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleOnKeyPress = e => {\n    if (e.key == \"Enter\") {\n      console.log(e.key);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputTask\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCheck,\n      className: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: value,\n      onChange: handleOnChange,\n      onKeyPress: handleOnKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskInput, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = TaskInput;\nexport default TaskInput;\n\nconst Input = props => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    placeholder: \"What needs to be done?\",\n    value: props.value,\n    onChange: props.onChange,\n    onKeyPress: props.onKeyPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskInput\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/Components/TaskInput.jsx"],"names":["React","useState","FontAwesomeIcon","faCheck","TaskInput","props","value","setValue","handleOnChange","e","target","handleOnKeyPress","key","console","log","Input","onChange","onKeyPress"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,cAAc,GAAIC,CAAD,IAAO;AAC5BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMK,gBAAgB,GAAIF,CAAD,IAAO;AAC9B,QAAIA,CAAC,CAACG,GAAF,IAAS,OAAb,EAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACG,GAAd;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAET,OAAvB;AAAgC,MAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEG,KADT;AAEE,MAAA,QAAQ,EAAEE,cAFZ;AAGE,MAAA,UAAU,EAAEG;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvBD;;GAAMP,S;;KAAAA,S;AAyBN,eAAeA,SAAf;;AAEA,MAAMW,KAAK,GAAIV,KAAD,IAAW;AACvB,sBACE;AACE,IAAA,WAAW,EAAC,wBADd;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACC,KAFf;AAGE,IAAA,QAAQ,EAAED,KAAK,CAACW,QAHlB;AAIE,IAAA,UAAU,EAAEX,KAAK,CAACY;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;MAAMF,K","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TaskInput = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleOnKeyPress = (e) => {\r\n    if (e.key == \"Enter\") {\r\n      console.log(e.key);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"inputTask\">\r\n      <FontAwesomeIcon icon={faCheck} className=\"icon\" />\r\n      <Input\r\n        value={value}\r\n        onChange={handleOnChange}\r\n        onKeyPress={handleOnKeyPress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <input\r\n      placeholder=\"What needs to be done?\"\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      onKeyPress={props.onKeyPress}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}