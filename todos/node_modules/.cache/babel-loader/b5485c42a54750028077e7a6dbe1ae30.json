{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-second\\\\Todos\\\\todos\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TaskInput from \"./Components/TaskInput\";\nimport TaskContainer from \"./Components/TaskContainer\";\nimport Categories from \"./Components/Categories\";\nimport { useEffect, useState } from \"react\";\nimport Api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nconst AppContainer = props => {\n  _s();\n\n  const [category, setCategory] = useState(\"all\");\n  const [tasks, setTasks] = useState(Api.getTasks());\n\n  const getTasks = () => {\n    const tasks = Api.getTasks();\n    setTasks(tasks);\n  };\n\n  const addTask = taskToSet => {\n    Api.setTasks(taskToSet);\n    getTasks();\n  };\n\n  const handleOnClickCategory = category => {\n    setCategory(category);\n  };\n\n  const deleteTask = id => {\n    Api.deleteTask(id);\n    getTasks();\n  };\n\n  const deleteAllCompletedTask = () => {\n    Api.deleteTask(null);\n    getTasks();\n  };\n\n  const completeTask = id => {\n    Api.changeTask(id, \"category\");\n    getTasks();\n  };\n\n  const changeTask = (id, taskToChange) => {\n    Api.changeTask(id, \"task\", taskToChange);\n    getTasks();\n  };\n\n  const toggleTaskCategory = category => {\n    Api.changeCategory(category);\n    getTasks();\n  };\n\n  const countItemsLeft = tasks.filter(task => task.category === \"active\");\n  const completedTaskCount = tasks.filter(task => task.category === \"complited\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask,\n      tasks: tasks,\n      toggleTaskCategory: toggleTaskCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskContainer, {\n      tasks: tasks,\n      category: category,\n      deleteTask: deleteTask,\n      completeTask: completeTask,\n      changeTask: changeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Categories, {\n      items: countItemsLeft.length,\n      onClick: handleOnClickCategory,\n      category: category,\n      completedTaskCount: completedTaskCount.length,\n      deleteAllCompletedTask: deleteAllCompletedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppContainer, \"Z9z1hQFS8WlJlfndMmvnNwRFvp8=\");\n\n_c2 = AppContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");","map":{"version":3,"sources":["D:/react-second/Todos/todos/src/App.js"],"names":["TaskInput","TaskContainer","Categories","useEffect","useState","Api","App","AppContainer","props","category","setCategory","tasks","setTasks","getTasks","addTask","taskToSet","handleOnClickCategory","deleteTask","id","deleteAllCompletedTask","completeTask","changeTask","taskToChange","toggleTaskCategory","changeCategory","countItemsLeft","filter","task","completedTaskCount","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport TaskInput from \"./Components/TaskInput\";\nimport TaskContainer from \"./Components/TaskContainer\";\nimport Categories from \"./Components/Categories\";\nimport { useEffect, useState } from \"react\";\nimport Api from \"./Api\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppContainer = (props) => {\n  const [category, setCategory] = useState(\"all\");\n  const [tasks, setTasks] = useState(Api.getTasks());\n\n  const getTasks = () => {\n    const tasks = Api.getTasks();\n    setTasks(tasks);\n  };\n\n  const addTask = (taskToSet) => {\n    Api.setTasks(taskToSet);\n    getTasks();\n  };\n\n  const handleOnClickCategory = (category) => {\n    setCategory(category);\n  };\n\n  const deleteTask = (id) => {\n    Api.deleteTask(id);\n    getTasks();\n  };\n\n  const deleteAllCompletedTask = () => {\n    Api.deleteTask(null);\n    getTasks();\n  };\n\n  const completeTask = (id) => {\n    Api.changeTask(id, \"category\");\n    getTasks();\n  };\n\n  const changeTask = (id, taskToChange) => {\n    Api.changeTask(id, \"task\", taskToChange);\n    getTasks();\n  };\n\n  const toggleTaskCategory = (category) => {\n    Api.changeCategory(category);\n    getTasks();\n  };\n\n  const countItemsLeft = tasks.filter((task) => task.category === \"active\");\n  const completedTaskCount = tasks.filter(\n    (task) => task.category === \"complited\"\n  );\n\n  return (\n    <div className=\"App\">\n      <TaskInput\n        addTask={addTask}\n        tasks={tasks}\n        toggleTaskCategory={toggleTaskCategory}\n      />\n      <TaskContainer\n        tasks={tasks}\n        category={category}\n        deleteTask={deleteTask}\n        completeTask={completeTask}\n        changeTask={changeTask}\n      />\n      {tasks.length > 0 ? (\n        <Categories\n          items={countItemsLeft.length}\n          onClick={handleOnClickCategory}\n          category={category}\n          completedTaskCount={completedTaskCount.length}\n          deleteAllCompletedTask={deleteAllCompletedTask}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}